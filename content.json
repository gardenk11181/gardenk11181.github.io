{"meta":{"title":"Garden","subtitle":"","description":"","author":"Jeongwon Kim","url":"https://gardenk11181.github.io","root":"/"},"pages":[],"posts":[{"title":"DCGAN - (2) Architecture","slug":"dcgan-02","date":"2021-06-29T04:06:09.000Z","updated":"2021-06-29T05:36:39.419Z","comments":true,"path":"2021/06/29/dcgan-02/","link":"","permalink":"https://gardenk11181.github.io/2021/06/29/dcgan-02/","excerpt":"","text":"이번 글에서는 DCGAN이 어떠한 Architecture을 가지는지 알아보자. 기본적으로는 Deep Neural Network의 한 종류인 CNN(Convolutional Neural Network)의 구조를 가진다. DCGAN의 CNN은 Convolutional layer와 Batch-norm layer, 그리고 ReLU로 이루어져 있는데 각 layer와 CNN에 대한 자세한 설명은 다음 기회에 해보도록 하고, 본 글에서는 이들이 DCGAN에서 어떻게 구성되어 있는지만 알아보도록 하자. Generator 위 그림과 같이 Generator는 latent vector를 image로 mapping함에 있어 총 네개의 convolutional layer로 이루어진 CNN 구조를 사용한다. 주어진 latent vector를 첫번째 activation map으로 reshape하는 layer까지 합하면 총 5개이다. 다만, Generator에서는 일반적인 convolutional layer가 아닌 convolutional transpose layer를 사용한다. 일반적인 convolutional layer는 큰 size의 input data를 작은 output data로 mapping하지만, conv-transpose layer는 input data의 size보다 output data의 size가 더 크다는 근본적인 차이점이 있다. 자세한 내용은 역시 CNN관련 글에서 알아보도록 하자. DiscriminatorDiscriminator는 Generator의 역순이라고 생각하면 좋다. 즉, 주어진 image를 CNN을 통해 scala probability로 mapping한다. 마찬가지로 총 네개의 convolutional layer가 사용되는데, Discriminator는 점차 차원을 줄여나가기에 일반적인 convolutional layer를 사용한다. 또한, 일반적인 ReLU function을 사용하지 않고 위 그림과 같이 에서의 기울기가 0이 아닌 작은 음의 값을 가지는 LeakyReLU function을 사용하였다. 지금까지 아주 간단하게 DCGAN의 Architecture를 알아보았고, 다음 글에서는 이 모델을 어떻게 학습시키는지 알아보자.","categories":[{"name":"AI","slug":"AI","permalink":"https://gardenk11181.github.io/categories/AI/"},{"name":"DCGAN","slug":"AI/DCGAN","permalink":"https://gardenk11181.github.io/categories/AI/DCGAN/"}],"tags":[{"name":"ai","slug":"ai","permalink":"https://gardenk11181.github.io/tags/ai/"},{"name":"deep learning","slug":"deep-learning","permalink":"https://gardenk11181.github.io/tags/deep-learning/"},{"name":"gan","slug":"gan","permalink":"https://gardenk11181.github.io/tags/gan/"}]},{"title":"DCGAN - (1) Generative Adversarial Networks","slug":"dcgan-01","date":"2021-06-27T03:46:33.000Z","updated":"2021-06-29T05:04:50.972Z","comments":true,"path":"2021/06/27/dcgan-01/","link":"","permalink":"https://gardenk11181.github.io/2021/06/27/dcgan-01/","excerpt":"","text":"인턴 1주차 목표는 pytorch가 제공하는 DCGAN tutorial을 공부해오는 것이었다.디테일한 코드보다는 용어의 의미와 전체적인 흐름 및 이론에 주목하여 살펴보도록 하자. GAN (Generative Adversarial Networks)먼저, GAN이란 Generator와 Discriminator로 이루어진 Adversarial Networks로, 주어진 data의 분포와 비슷한 분포의 sample을 추출하고자 하는 generative model이다. 여기서 ‘Adversarial(적대적)’이라 표현한 이유는, 후술하겠지만 Generator와 Discriminator가 서로 mini-max게임을 하는 관계이기 때문이다. Generator는 latent vector를 가지고 fake image를 만들고, Discriminator는 주어진 image가 real인지 아닌지를 판별한다. 즉, Discriminator는 주어진 image가 real인지 아닌지 정확하게 분류하고자 하는 것이 목표이고, Generator는 이러한 Discriminator가 자기가 만든 fake image를 real image로 인식하게끔 하는 것이 목표이다. 이러한 이유로 Adversarial Networks라고 표현하였다. Loss Function앞서 말한 GAN의 의미를 이해한다면, 다음과 같이 정의된 Loss Function은 꽤나 자연스럽게 다가온다. Discriminator는 training data\b x를 real로, Generator에 의해 생성된 G(z)를 fake로 분류할 확률을 maximize한다. 이와 동시에 Generator는 Discriminator가 G(z)를 fake로 분류할 확률을 minimize한다. GAN을 제시한 논문에 따르면 두 분포 가 같을 때가 본 mini-max game의 solution이지만, 수렴조건에 관한 부분은 아직 연구중에 있다고 한다. DCGAN은 이러한 GAN을 Deep Convolutional Architecture를 가지고 구현한 모델에 해당한다. 자세한 내용은 다음 글에서 다뤄보자.","categories":[{"name":"AI","slug":"AI","permalink":"https://gardenk11181.github.io/categories/AI/"},{"name":"DCGAN","slug":"AI/DCGAN","permalink":"https://gardenk11181.github.io/categories/AI/DCGAN/"}],"tags":[{"name":"ai","slug":"ai","permalink":"https://gardenk11181.github.io/tags/ai/"},{"name":"deep learning","slug":"deep-learning","permalink":"https://gardenk11181.github.io/tags/deep-learning/"},{"name":"gan","slug":"gan","permalink":"https://gardenk11181.github.io/tags/gan/"}]}],"categories":[{"name":"AI","slug":"AI","permalink":"https://gardenk11181.github.io/categories/AI/"},{"name":"DCGAN","slug":"AI/DCGAN","permalink":"https://gardenk11181.github.io/categories/AI/DCGAN/"}],"tags":[{"name":"ai","slug":"ai","permalink":"https://gardenk11181.github.io/tags/ai/"},{"name":"deep learning","slug":"deep-learning","permalink":"https://gardenk11181.github.io/tags/deep-learning/"},{"name":"gan","slug":"gan","permalink":"https://gardenk11181.github.io/tags/gan/"}]}